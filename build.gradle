plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
}

group 'com.github.grambbledook.example'
version '2.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
}

ext {
    kotlinVersion = '1.3.31'
    arrowVersion = '0.9.0'
    logbackVersion = '1.2.2'
    junit5Version = '5.4.1'
    mockkVersion = '1.9.3'
    restAssuredVersion = '2.9.0'
    jacksonVersion = '2.9.6'
    sparkVersion = '2.7.2'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.grambbledook.example.spark.MainKt'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:$jacksonVersion"

    compile "com.sparkjava:spark-core:$sparkVersion"

    compile "io.arrow-kt:arrow-core-data:$arrowVersion"
    compile "io.arrow-kt:arrow-core-extensions:$arrowVersion"

    compile "ch.qos.logback:logback-classic:$logbackVersion"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junit5Version"

    testCompile "io.mockk:mockk:$mockkVersion"
    testCompile "com.jayway.restassured:rest-assured:$restAssuredVersion"

}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}